#
type Article {
  #
  id: String

  #
  creator: [String]

  #
  title: String

  #
  description: String

  #
  image_url: String

  #
  link: String

  #
  source_id: String

  #
  pubDate: String

  #
  content: String

  #
  category: [String]

  #
  likes: [String]

  #
  isLiked: Boolean
}

#
type Category {
  #
  id: String

  #
  name: String
}

#
input CompleteRegistration {
  #
  topics: [String]
}

#
input CreateUser {
  #
  email: String!

  #
  full_name: String!

  #
  phone_number: String!

  #
  password: String!
}

#
type ErrorResponse {
  #
  status: String

  #
  results: NewsError
}

#
input ForgotPassword {
  #
  email: String!
}

#
type GenericResponse {
  #
  message: String!
}

#
input GoogleAuth {
  #
  access_token: String!
}

#
type GoogleAuthModel {
  #
  sub: String

  #
  name: String

  #
  given_name: String

  #
  family_name: String

  #
  email: String

  #
  picture: String

  #
  email_verified: Boolean

  #
  locale: String
}

#
input Login {
  #
  email: String!

  #
  password: String!
}

#
type LoginResponse {
  #
  token: String!
}

#
input Logout {
  #
  token: String!
}

#
type Mutation {
  #
  CreateNewUser(input: CreateUser!): User

  #
  Login(input: Login!): LoginResponse!

  #
  CompleteRegistration(input: CompleteRegistration!): GenericResponse

  #
  ForgotPassword(input: ForgotPassword!): GenericResponse!

  #
  GoogleLogin(input: GoogleAuth!): LoginResponse

  #
  ResetPassword(input: ResetPassword!): GenericResponse!

  #
  VerifyEmail(input: VerifyOtp!): GenericResponse!

  #
  VerifyResetOtp(input: VerifyOtp!): GenericResponse!

  #
  Logout(input: Logout!): GenericResponse

  #
  AskKora(input: promptContent!): promptResponse

  #
  SaveNews(newsID: String!): Boolean

  #
  LikeNews(newsID: String!): Boolean

  #
  ResendOtp(email: String!): GenericResponse

  #
  EditUserProfile(input: UpdateProfile!): GenericResponse

  #
  DeleteProfile: GenericResponse

  #
  EditUserInterest(topics: [String!]): GenericResponse
}

#
type NewsError {
  #
  message: String

  #
  code: String
}

#
input NewsQuery {
  #
  source: String

  #
  category: String

  #
  pageSize: Int!

  #
  page: Int!
}

#
type Query {
  #
  GetUser: User

  #
  GetLatestAndTrendingNews(query: NewsQuery!): [Article]

  #
  GetNewsSources: [Source]

  #
  SeedNewsSources: [Source]

  #
  GetNewsCategories: [Category]

  #
  GetSingleNews(newsID: String!): Article

  #
  GetSavedNews: [Article]
}

#
input ResetPassword {
  #
  email: String!

  #
  newPassword: String!
}

#
type Response {
  #
  status: String

  #
  totalResults: Int

  #
  results: [Article]
}

#
type Source {
  #
  id: String

  #
  name: String

  #
  url: String

  #
  category: [String]

  #
  icon: String
}

#
type SourceLogo {
  #
  name: String

  #
  domain: String

  #
  icon: String
}

#
type SourceResponse {
  #
  status: String

  #
  results: [Source]
}

#
scalar Timestamp

#
input UpdateProfile {
  #
  picture: String

  #
  full_name: String
}

#
type User {
  #
  _id: ID!

  #
  email: String

  #
  picture: String

  #
  full_name: String

  #
  topics: [String]

  #
  is_verified: Boolean

  #
  is_otp_verified: Boolean

  #
  is_password_reset: Boolean

  #
  created_at: Timestamp!

  #
  updated_at: Timestamp!
}

#
input VerifyOtp {
  #
  otp: String!
}

#
input promptContent {
  #
  content: String
}

#
type promptResponse {
  #
  result: String
}
